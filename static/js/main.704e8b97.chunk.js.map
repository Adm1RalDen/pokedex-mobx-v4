{"version":3,"sources":["Stores/pokemon.jsx","App/pokemon.jsx","App/pokemonBeta.jsx","App/App.jsx","App/pokemonInfo.jsx","index.js"],"names":["Pokemon","countPokemon","poketArray","array","sizeView","clickOnPokemon","tempPokemon","pageCount","typePokemon","filterArray","fullArray","filterPoketArray","renderFilter","selectedPage","searchValue","props","this","concat","Object","toConsumableArray","_this","console","log","newArray","filter","e","j","length","key","type","name","JSON","parse","stringify","countPage","undefined","poket","temp","decorate","changeFilterPoketArray","action","changeSearchValue","observable","changeSelectedPage","loadFullPokemon","setFullPokemon","setFiter","clearFilter","changePageCount","changeFilterArray","pushPokemon","changePoketArray","clickPokemon","changeTempPokemon","pokemonLoad","pushArray","changeArray","changeSizeView","changeAll","changeRenderFilter","pokemon","Poke","inject","observer","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleClick","stat","i","push","react_default","a","createElement","className","prop","url","base_stat","src","alt","onClick","handleBack","handlePush","localStorage","setItem","inherits","createClass","value","React","Component","window","onbeforeunload","requestRoot","PokeBeta","Pokedex","tempGrid","App_pokemon","click","history","getPokemon","b","request","fetch","cache","then","response","json","data","speciesRequest","species","sprites","stats","types","weight","page","match","params","numberPage","onload","location","href","handleSort","tempArray","newTemp","sort","nameA","toLowerCase","nameB","map","item","handleChangeSizeView","target","element","index","forEach","handlePageClick","selected","popUp","document","getElementById","popUpHide","classList","contains","changeFilter","setFilter","flag","firstFilterLoad","changeSearch","pokemons","indexOf","slice","tempArr","getItem","require","_this2","id","size","onChange","placeholder","react_router","path","component","Beta","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","forcePage","PokeInfo","PokemonInfo","handleGoHome","goBack","pokemonName","changeTempPokemons","withRouter","stores","ReactDOM","render","mobx_react_module","react_router_dom","Poket","exact","PoketInfo"],"mappings":"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","file":"static/js/main.704e8b97.chunk.js","sourcesContent":["/* eslint-disable no-loop-func */\r\n\r\nimport { observable, action, decorate } from 'mobx';\r\n\r\nclass Pokemon {\r\n\r\n    countPokemon = 40;\r\n    poketArray = [];\r\n    array = [];\r\n    sizeView = 10;\r\n    clickOnPokemon = false;\r\n    tempPokemon = [];\r\n    pageCount = 80;\r\n    typePokemon = ['bug', 'dark', 'dragon', 'electric', 'fairy', 'fighting',\r\n        'fire', 'flying', 'ghost', 'grass', 'ground', 'ice', 'normal', 'poison',\r\n        'psychic', 'rock', 'steel', 'water'];\r\n    filterArray = {};\r\n    fullArray = [];\r\n    filterPoketArray = [];\r\n    renderFilter = [];\r\n    selectedPage = 0;\r\n    searchValue = false;\r\n\r\n    changeFilterPoketArray(props) {\r\n        this.filterPoketArray = props;\r\n    }\r\n\r\n    changeRenderFilter(props) {\r\n        this.renderFilter = [...this.renderFilter, props];\r\n    }\r\n\r\n    setFullPokemon(props) {\r\n        this.fullArray = props;\r\n    }\r\n\r\n    setFiter() {\r\n        console.log('фільтруєм', this.fullArray);\r\n        let newArray = this.fullArray.filter((e) => {\r\n            console.log(e);\r\n            for (var j = 0; j < e[3].length; j++) {\r\n                for (let key in this.filterArray) {\r\n                    if (this.filterArray[key]) {//key - значение текстовое,  this.filterArray[key] - значение ключа\r\n                        if (e[3][j].type.name === key) {\r\n                            // console.log(e[0][j].type.name, key);\r\n                            return true;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n        this.filterPoketArray = JSON.parse(JSON.stringify(newArray));\r\n        console.log('відфільтрували', newArray);\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filterArray = {};\r\n        this.filterPoketArray = [];\r\n        this.renderFilter = [];\r\n    }\r\n\r\n    changePageCount(countPage) {\r\n        this.pageCount = countPage;\r\n    }\r\n\r\n    changeFilterArray(filter) {\r\n        if (this.filterArray[filter] === undefined) {\r\n            this.filterArray[filter] = true;\r\n        } else if (this.filterArray[filter] === true) {\r\n            this.filterArray[filter] = false;\r\n        } else {\r\n            this.filterArray[filter] = true;\r\n        }\r\n    }\r\n\r\n    pushPokemon(poket) {\r\n        this.poketArray = [...this.poketArray, poket];\r\n        // this.poketArray.push(poket);\r\n    }\r\n\r\n    changePoketArray(props) {\r\n        // console.log('renderFilter', this.renderFilter.length);\r\n        this.poketArray = JSON.parse(JSON.stringify(props));\r\n    }\r\n\r\n    clickPokemon(poket) {\r\n        this.clickOnPokemon = poket;\r\n    }\r\n\r\n    changeTempPokemon(poket) {\r\n        this.tempPokemon = poket;\r\n    }\r\n\r\n    pokemonLoad() {\r\n        this.countPokemon += 10;\r\n    }\r\n\r\n    pushArray(temp) {\r\n        this.array = [...this.array, temp];\r\n        // this.array.push(temp);\r\n    }\r\n\r\n    changeArray(temp) {\r\n        this.array = temp;\r\n    }\r\n\r\n    changeSizeView(temp) {\r\n        this.sizeView = +temp;\r\n    }\r\n\r\n    changeAll() {\r\n        // this.countPokemon = countPokemon;\r\n        this.poketArray = [];\r\n        this.array = [];\r\n    }\r\n    changeSelectedPage(props) {\r\n        console.log('change selected page', props);\r\n        this.selectedPage = props;\r\n    }\r\n\r\n    changeSearchValue(props) {\r\n        this.searchValue = props;\r\n    }\r\n\r\n}\r\ndecorate(Pokemon, {\r\n    changeFilterPoketArray: action,\r\n    changeSearchValue: action,\r\n    searchValue: observable,\r\n    changeSelectedPage: action,\r\n    selectedPage: observable,\r\n    loadFullPokemon: action,\r\n    setFullPokemon: action,\r\n    setFiter: action,\r\n    clearFilter: action,\r\n    changePageCount: action,\r\n    changeFilterArray: action,\r\n    pushPokemon: action,\r\n    changePoketArray: action,\r\n    clickPokemon: action,\r\n    changeTempPokemon: action,\r\n    pokemonLoad: action,\r\n    pushArray: action,\r\n    changeArray: action,\r\n    changeSizeView: action,\r\n    changeAll: action,\r\n    changeRenderFilter: action,\r\n    countPokemon: observable,\r\n    poketArray: observable,\r\n    array: observable,\r\n    sizeView: observable,\r\n    clickOnPokemon: observable,\r\n    tempPokemon: observable,\r\n    pageCount: observable,\r\n    typePokemon: observable,\r\n    filterArray: observable,\r\n    fullArray: observable,\r\n    filterPoketArray: observable,\r\n    renderFilter: observable,\r\n});\r\nconst pokemon = new Pokemon();\r\n\r\nexport default pokemon;\r\nexport { Pokemon };","import React from 'react';\r\nimport '../style/pokemon.css';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nconst Poke = inject('pokemon')(observer(\r\n    class Pokemon extends React.Component {\r\n\r\n        handleClick = () => {\r\n            let stat = [];\r\n    \r\n            for (var i = 0; i < 6; i++) {\r\n                stat.push(\r\n                    <div className='pokemonStats' key={this.props.prop[2][i].stat.url}>\r\n                        {this.props.prop[2][i].stat.name} - {this.props.prop[2][i].base_stat}\r\n                    </div>\r\n                );\r\n            }\r\n    \r\n            for (var j = 0; j < this.props.prop[3].length; j++) {\r\n                stat.push(\r\n                    <div className='poketSlot' key={this.props.prop[3][j].type.url}>\r\n                        {this.props.prop[3][j].type.name}\r\n                    </div>\r\n                );\r\n            }\r\n            const temp =\r\n                <div className=\"poketInfo\">\r\n                    <div className='pokemonPages'>\r\n                        <div className='pokemonImg'>\r\n                            <span>{this.props.prop[1]}</span>\r\n                            <img src={this.props.prop[0]} alt={this.props.prop[1]}></img>\r\n                        </div>\r\n                        <div className='pokemonInformation'>\r\n                            {stat}\r\n                        </div>\r\n                    </div>\r\n                    <div className='gridBack'>\r\n                        <button onClick={this.handleBack} className='buttonBack'>back</button>\r\n                    </div>\r\n                </div>;\r\n            this.props.pokemon.changeTempPokemon(temp);//new array\r\n            this.props.pokemon.clickPokemon(true);\r\n    \r\n        }\r\n        handleBack = () => {\r\n            this.props.pokemon.clickPokemon(false);\r\n        }\r\n        handlePush = () => {\r\n            this.temp =\r\n                <div className=\"Pokemon\" onClick={this.handleClick} key={this.props.prop[1]}>\r\n                    <img src={this.props.prop[0]} alt='pokemon' />\r\n                    <span>{this.props.prop[1]}</span>\r\n                </div>;\r\n            localStorage.setItem(JSON.stringify(this.props.prop[1]), JSON.stringify(this.props.prop));\r\n        }\r\n    \r\n        componentWillMount() {\r\n            this.handlePush();\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <div>\r\n                    {this.temp}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default Poke;","import React from 'react';\r\nimport '../style/pokemon.css';\r\nimport Pokemon from './pokemon';\r\nimport { observer, inject } from \"mobx-react\";\r\n// import { compose } from 'recompose';\r\n\r\nwindow.onbeforeunload = () => {\r\n    localStorage.setItem('firstLoad', 'false');\r\n}\r\n\r\nlet requestRoot = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\nconst PokeBeta = inject('pokemon')(observer(\r\n    class Pokedex extends React.Component {\r\n\r\n        componentWillMount() {\r\n            let page = +this.props.match.params.numberPage;\r\n            console.log('beta', page);\r\n            this.props.pokemon.changeAll();\r\n            this.getPokemon((this.props.pokemon.sizeView * page) - this.props.pokemon.sizeView + 1, page * this.props.pokemon.sizeView);\r\n\r\n        }\r\n\r\n        handlePush = (props) => {\r\n            let tempGrid = [];\r\n            tempGrid.push(<Pokemon prop={props} key={props[1]} click={this.props.history} />)\r\n            this.props.pokemon.pushArray(tempGrid);\r\n            localStorage.setItem(JSON.stringify(props[1]), JSON.stringify(props));\r\n        }\r\n\r\n        getPokemon = (a, b) => {\r\n            console.log('get pokemon', a, b);\r\n            for (var i = a; i <= b; i++) {\r\n                const request = `${requestRoot}${i}/`;\r\n                fetch(request, {\r\n                    cache: \"force-cache\"\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const speciesRequest = data.species.url;\r\n                        let temp = [];\r\n                        temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                        this.props.pokemon.pushPokemon(temp);\r\n                        this.handlePush(temp);\r\n                        return fetch(speciesRequest);\r\n                    })\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <div >\r\n                    {this.props.pokemon.clickOnPokemon ? this.props.pokemon.tempPokemon : <div className=\"FlexGrid\" >{this.props.pokemon.array}</div>}\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default PokeBeta","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport '../style/mainPage.css';\r\nimport '../style/pagination.css';\r\nimport '../style/search.css';\r\nimport Beta from './pokemonBeta.jsx';\r\nimport Pokemon from './pokemon';\r\n\r\n\r\nlet requestRoot = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\nwindow.onload = () => {\r\n    window.location.href = \"#/page/1\";\r\n}\r\n\r\nconst Poke = inject('pokemon')(observer(\r\n    class Pokedex extends React.Component {\r\n\r\n        componentDidMount() {\r\n            this.props.history.push(`/page/1`);\r\n            let tempArr = JSON.parse(localStorage.getItem('fullArray'));\r\n            if (tempArr !== null) {\r\n                console.log('temparrr', tempArr);\r\n                this.props.pokemon.setFullPokemon(tempArr);\r\n            } else {\r\n                console.log('load');\r\n                // this.props.pokemon.loadFullPokemon().then(response => {\r\n                this.props.pokemon.setFullPokemon(require('../database.json'));\r\n                localStorage.setItem('fullArray', JSON.stringify(this.props.pokemon.fullArray));\r\n\r\n                // console.log('the end load');\r\n                // });\r\n\r\n            }\r\n        }\r\n\r\n        handleSort = () => {\r\n            let tempArray = this.props.pokemon.poketArray;\r\n\r\n            let newTemp = JSON.parse(JSON.stringify(tempArray));\r\n            newTemp.sort(function (a, b) {\r\n                var nameA = a[1].toLowerCase(), nameB = b[1].toLowerCase()\r\n                if (nameA < nameB) //сортируем строки по возрастанию\r\n                    return -1\r\n                if (nameA > nameB)\r\n                    return 1\r\n                return 0 // Никакой сортировки\r\n            })\r\n            let tempGrid = [];\r\n            newTemp.map((item) => {\r\n                tempGrid.push(<Pokemon prop={item} key={item[1]} click={this.props.history} />);\r\n                return 0;\r\n            });\r\n            this.props.pokemon.changeArray(tempGrid);\r\n            // console.log(newTemp);\r\n        }\r\n\r\n        handleChangeSizeView = (e) => {\r\n            this.props.history.push(`/page/1`);\r\n            this.props.pokemon.changeSelectedPage(0);\r\n            this.props.pokemon.changeSizeView(e.target.value);\r\n            this.props.pokemon.changeAll();\r\n\r\n            if (this.props.pokemon.filterPoketArray.length === 0) {\r\n                this.props.pokemon.changePageCount(800 / e.target.value);\r\n                this.getPokemon(1, e.target.value);\r\n            }\r\n            else {\r\n                this.props.pokemon.changePageCount(this.props.pokemon.filterPoketArray.length / e.target.value);\r\n                console.log('handlePageClick');\r\n                let temp = this.props.pokemon.filterPoketArray.filter((element, index) => {\r\n                    if (index + 1 >= 0 && index + 1 <= e.target.value) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n                temp.forEach((e) => {\r\n                    const request = `${requestRoot}${e[1]}/`;\r\n                    fetch(request, {\r\n                        cache: \"force-cache\"\r\n                    })\r\n                        .then(response => response.json())\r\n\r\n                        .then(data => {\r\n                            const speciesRequest = data.species.url;\r\n                            let temp = [];\r\n                            temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                            this.handlePush(temp);\r\n                            return fetch(speciesRequest);\r\n                        })\r\n                })\r\n            }\r\n        }\r\n\r\n        getPokemon = (a, b) => {\r\n            console.log('get pokemon', a, b);\r\n            for (var i = a; i <= b; i++) {\r\n                const request = `${requestRoot}${i}/`;\r\n                fetch(request, {\r\n                    cache: \"force-cache\"\r\n                })\r\n                    .then(response => response.json())\r\n\r\n                    .then(data => {\r\n                        const speciesRequest = data.species.url;\r\n                        let temp = [];\r\n                        temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                        this.handlePush(temp);\r\n                        return fetch(speciesRequest);\r\n                    })\r\n            }\r\n        }\r\n\r\n        handlePush = (props) => {\r\n            let tempGrid = [];\r\n            this.props.pokemon.pushPokemon(props);\r\n            tempGrid.push(<Pokemon prop={props} key={props[1]} click={this.props.history} />)\r\n            this.props.pokemon.pushArray(tempGrid);\r\n            localStorage.setItem(JSON.stringify(props[1]), JSON.stringify(props));\r\n        }\r\n\r\n        handlePageClick = data => {\r\n            console.log(data);\r\n            let selected = data.selected + 1;\r\n            this.props.history.push(`/page/${selected}`);\r\n            this.props.pokemon.changeAll();\r\n            if (this.props.pokemon.filterPoketArray.length === 0)\r\n                this.getPokemon((this.props.pokemon.sizeView * selected) - this.props.pokemon.sizeView + 1, selected * this.props.pokemon.sizeView);\r\n            else {\r\n                console.log('handlePageClick');\r\n                let temp = this.props.pokemon.filterPoketArray.filter((e, index) => {\r\n                    if (index + 1 >= (this.props.pokemon.sizeView * selected) - this.props.pokemon.sizeView + 1\r\n                        && index + 1 <= selected * this.props.pokemon.sizeView) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n                temp.forEach((e) => {\r\n                    const request = `${requestRoot}${e[1]}/`;\r\n                    fetch(request, {\r\n                        cache: \"force-cache\"\r\n                    })\r\n                        .then(response => response.json())\r\n\r\n                        .then(data => {\r\n                            const speciesRequest = data.species.url;\r\n                            let temp = [];\r\n                            temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                            this.handlePush(temp);\r\n                            return fetch(speciesRequest);\r\n                        })\r\n                })\r\n            }\r\n            this.props.pokemon.changeSelectedPage(data.selected);\r\n        }\r\n\r\n        popUp = () => {\r\n            document.getElementById('popup').className = 'popup--active';\r\n        }\r\n\r\n        popUpHide = () => {\r\n            if (document.getElementById('popup').classList.contains(\"popup--active\")) {\r\n                document.getElementById('popup').className = 'popup';\r\n            }\r\n        }\r\n\r\n        changeFilter = (props) => {\r\n            this.props.pokemon.changeFilterArray(props);\r\n        }\r\n\r\n        setFilter = () => {\r\n            this.props.pokemon.setFiter();\r\n            var flag = false;\r\n            for (let key in this.props.pokemon.filterArray) {\r\n                if (this.props.pokemon.filterArray[key]) {\r\n                    flag = true;\r\n                }\r\n            }\r\n            if (flag === false) {\r\n                this.clearFilter();\r\n            }\r\n            else if (this.props.pokemon.filterPoketArray.length !== 0) {\r\n\r\n                this.props.pokemon.changeAll();\r\n                this.props.pokemon.changePageCount(this.props.pokemon.filterPoketArray.length / this.props.pokemon.sizeView);\r\n                for (let i = 0; i < 10; i++) {\r\n                    const request = `${requestRoot}${this.props.pokemon.filterPoketArray[i][1]}/`;\r\n                    fetch(request, {\r\n                        cache: \"force-cache\"\r\n                    })\r\n                        .then(response => response.json())\r\n\r\n                        .then(data => {\r\n                            const speciesRequest = data.species.url;\r\n                            let temp = [];\r\n                            temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                            this.handlePush(temp);\r\n                            return fetch(speciesRequest);\r\n                        })\r\n                }\r\n                this.props.history.push(`/page/1`);\r\n                this.props.pokemon.changeSelectedPage(0);\r\n            }\r\n            if (document.getElementById('popup').classList.contains(\"popup--active\")) {\r\n                document.getElementById('popup').className = 'popup';\r\n            }\r\n        }\r\n\r\n        firstFilterLoad = () => {\r\n            console.log('arrayRender', this.props.pokemon.renderFilter);\r\n            let temp = this.props.pokemon.renderFilter.filter((e, index) => {\r\n                console.log('arrayRender', this.props.pokemon.renderFilter);\r\n                if (index + 1 >= 1 && index + 1 <= 10) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            temp.forEach((e) => {\r\n                console.log('setFilter', e);\r\n                this.handlePush(e);\r\n            })\r\n        }\r\n\r\n        clearFilter = () => {\r\n            this.props.history.push(`/page/1`);\r\n            this.props.pokemon.changeAll();\r\n            this.props.pokemon.changePageCount(800 / this.props.pokemon.sizeView);\r\n            this.getPokemon(1, this.props.pokemon.sizeView);\r\n            this.props.pokemon.clearFilter();\r\n            this.props.pokemon.changeSelectedPage(0);\r\n        }\r\n\r\n        changeSearch = () => {\r\n            let temp = document.getElementById('searchInput').value;\r\n            console.log(temp);\r\n            let pokemons = this.props.pokemon.fullArray;\r\n            pokemons = pokemons.filter(item => {\r\n                if (item[1].indexOf(temp) !== -1) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            // console.log(pokemons);\r\n            this.props.pokemon.changeFilterPoketArray(pokemons);\r\n            this.props.pokemon.changeAll();\r\n            this.props.pokemon.changePageCount(pokemons.length / this.props.pokemon.sizeView);\r\n            pokemons.slice(0,10).map(item => {\r\n                this.handlePush(item);\r\n            });\r\n            this.props.history.push(`/page/1`);\r\n            this.props.pokemon.changeSelectedPage(0);\r\n\r\n        }\r\n        render() {\r\n            return (\r\n                <div id='mainPage'>\r\n                    <div className=\"header\">\r\n                        <span>Pokedex</span>\r\n                    </div>\r\n                    <div className='headerButton'>\r\n                        {/* <button className='buttonMenu' onClick>search</button> */}\r\n                        <button className='buttonMenu' onClick={this.handleSort}>sort</button>\r\n                        <select name=\"sizeView\" className='buttonMenu' id=\"sizeView\" size=\"1\" onChange={this.handleChangeSizeView}>\r\n                            <option value=\"10\" >10</option>\r\n                            <option value=\"20\" >20</option>\r\n                            <option value=\"50\" >50</option>\r\n                        </select>\r\n                        <button onClick={this.popUp} id='button' className='buttonMenu'>filter</button>\r\n                        <button onClick={this.clearFilter} id='button' className='buttonMenu'>clear</button>\r\n                        <div className='popup' id='popup'>\r\n                            <div className='bodyPopup'>\r\n                                <div className='headers' ><span onClick={this.popUpHide}>x</span></div>\r\n                                <div className='bodyFilter'>\r\n                                    <ul className='filterContainer'>\r\n                                        {this.props.pokemon.typePokemon.map(key => {\r\n                                            return <li className='filterButton' key={key}>\r\n                                                <span className='filterName'>{key}</span>\r\n                                                <span className={(this.props.pokemon.filterArray[key] === true) ? 'selectFiter--Active' : 'selectFilter'} onClick={() => this.changeFilter(key)}> &#10010; </span>\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n\r\n                                </div>\r\n                                <div className='setFilter'>\r\n                                    <button onClick={this.setFilter}> set filter </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d7\">\r\n                        <form>\r\n                            <input type=\"text\" placeholder=\"Искать здесь...\" onChange={this.changeSearch} id='searchInput' />\r\n                            <button type=\"submit\"></button>\r\n                        </form>\r\n                    </div>\r\n                    <div className='pokemonItems'>\r\n                        <Route path=\"/page/:numberPage\" component={Beta} />\r\n                    </div>\r\n                    <div className='alignItem'>\r\n                        <ReactPaginate\r\n                            previousLabel={'<'}\r\n                            nextLabel={'>   '}\r\n                            breakLabel={'...'}\r\n                            breakClassName={'break-me'}\r\n                            pageCount={this.props.pokemon.pageCount}\r\n                            marginPagesDisplayed={2}\r\n                            pageRangeDisplayed={2}\r\n                            onPageChange={this.handlePageClick}\r\n                            containerClassName={'pagination'}\r\n                            subContainerClassName={'pages pagination'}\r\n                            activeClassName={'active'}\r\n                            forcePage={this.props.pokemon.selectedPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default Poke;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../style/pokemonInfo.css';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nconst PokeInfo = inject('pokemon')(observer(\r\n    class PokemonInfo extends React.Component {\r\n        handleGoHome = () => {\r\n            this.props.history.goBack();\r\n        }\r\n        render() {\r\n            let name = JSON.stringify(this.props.match.params.pokemonName);\r\n            let pokemon = JSON.parse(localStorage.getItem(name));\r\n            let stat = [];\r\n            if (pokemon) {\r\n                for (var i = 0; i < 6; i++) {\r\n                    stat.push(\r\n                        <div className='pokemonStats' key={pokemon[2][i].stat.url}>\r\n                            {pokemon[2][i].stat.name} - {pokemon[2][i].base_stat}\r\n                        </div>\r\n                    );\r\n                }\r\n                for (var j = 0; j < pokemon[3].length; j++) {\r\n                    stat.push(\r\n                        <div className='poketSlot' key={pokemon[3][j].type.url}>\r\n                            {pokemon[3][j].type.name}\r\n                        </div>\r\n                    );\r\n\r\n                }\r\n            } else {\r\n                PokemonInfo.push(<div>Failed 404</div>)\r\n            }\r\n            this.props.pokemon.changeTempPokemons(stat);\r\n            return (\r\n                <div >\r\n                    <div className='pokemonPages'>\r\n                        <div className='pokemonImg'>\r\n                            <span>{pokemon[1]}</span>\r\n                            <img src={pokemon[0]} alt={pokemon[1]}></img>\r\n                        </div>\r\n                        <div className='pokemonInformation'>\r\n                            {stat}\r\n                        </div>\r\n                    </div>\r\n                    <div className='loadMore' onClick={this.handleGoHome}>\r\n                        Go home\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default withRouter(PokeInfo)","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'mobx-react';\nimport pokemon from \"./Stores/pokemon\";\nimport Poket from './App/App';\nimport PoketInfo from './App/pokemonInfo';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport './style/main.css';\n\nconst stores = { pokemon };\n\nReactDOM.render(\n    <Provider {...stores} >\n        <HashRouter >\n            <Route path='/' component={Poket} />\n            <Route path=\"/: pokemonName \" exact component={PoketInfo} />\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}