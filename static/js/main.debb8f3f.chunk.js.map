{"version":3,"sources":["Stores/pokemon.jsx","App/pokemon.jsx","App/pokemonBeta.jsx","App/App.jsx","App/pokemonInfo.jsx","index.js"],"names":["Pokemon","countPokemon","poketArray","array","sizeView","clickOnPokemon","tempPokemon","pageCount","typePokemon","filterArray","fullArray","filterPoketArray","renderFilter","props","this","concat","Object","toConsumableArray","_this","_loop","id","i","request","fetch","cache","then","response","json","data","speciesRequest","species","url","poket","push","types","_this2","console","log","newArray","filter","e","j","length","key","type","name","JSON","parse","stringify","countPage","undefined","temp","decorate","loadFullPokemon","action","setFullPokemon","setFiter","clearFilter","changePageCount","changeFilterArray","pushPokemon","changePoketArray","clickPokemon","changeTempPokemon","pokemonLoad","pushArray","changeArray","changeSizeView","changeAll","changeRenderFilter","observable","pokemon","Poke","inject","observer","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleClick","stat","react_default","a","createElement","className","prop","base_stat","src","alt","onClick","handleBack","handlePush","localStorage","setItem","inherits","createClass","value","React","Component","window","onbeforeunload","requestRoot","PokeBeta","Pokedex","tempGrid","App_pokemon","click","history","getPokemon","b","sprites","stats","weight","page","match","params","numberPage","onload","location","href","handleSort","tempArray","newTemp","sort","nameA","toLowerCase","nameB","map","item","handleChangeSizeView","target","element","index","forEach","handlePageClick","selected","popUp","document","getElementById","popUpHide","classList","contains","changeFilter","setFilter","flag","firstFilterLoad","tempArr","getItem","size","onChange","react_router","path","component","Beta","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","PokeInfo","PokemonInfo","handleGoHome","goBack","pokemonName","changeTempPokemons","withRouter","stores","ReactDOM","render","mobx_react_module","react_router_dom","Poket","exact","PoketInfo"],"mappings":"sTAIMA,mDAEFC,aAAe,QACfC,WAAa,QACbC,MAAQ,QACRC,SAAW,QACXC,gBAAiB,OACjBC,YAAc,QACdC,UAAY,QACZC,YAAc,CAAC,MAAO,OAAQ,SAAU,WAAY,QAAS,WACzD,OAAQ,SAAU,QAAS,QAAS,SAAU,MAAO,SAAU,SAC/D,UAAW,OAAQ,QAAS,cAChCC,YAAc,QACdC,UAAY,QACZC,iBAAmB,QACnBC,aAAe,kEAEIC,GACfC,KAAKF,aAAL,GAAAG,OAAAC,OAAAC,EAAA,EAAAD,CAAwBF,KAAKF,cAA7B,CAA2CC,8CAM3C,IAFc,IAAAK,EAAAJ,KAAAK,EAAA,WAGV,IAAMC,EAAKC,EACLC,EAAO,GAAAP,OAHC,sCAGDA,OAAoBM,EAApB,KACbE,MAAMD,EAAS,CACXE,MAAO,gBAENC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IAAMC,EAAiBD,EAAKE,QAAQC,IAChCC,EAAQ,GAIZ,OAHAA,EAAMC,KAAKL,EAAKM,MAAOd,GAEvBF,EAAKR,UAAY,CAACQ,EAAKR,UAAWsB,GAC3BT,MAAMM,MAbhBR,EAAI,EAAGA,GAAK,IAAKA,IAAKF,2CAkBpBN,GACXC,KAAKJ,UAAYG,qCAGV,IAAAsB,EAAArB,KACPsB,QAAQC,IAAI,yDAAavB,KAAKJ,WAC9B,IAAI4B,EAAWxB,KAAKJ,UAAU6B,OAAO,SAACC,GAClCJ,QAAQC,IAAIG,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAE,GAAGE,OAAQD,IAC7B,IAAK,IAAIE,KAAOR,EAAK1B,YACjB,GAAI0B,EAAK1B,YAAYkC,IACbH,EAAE,GAAGC,GAAGG,KAAKC,OAASF,EAEtB,OAAO,EAMvB,OAAO,IAEX7B,KAAKH,iBAAmBmC,KAAKC,MAAMD,KAAKE,UAAUV,IAClDF,QAAQC,IAAI,uFAAkBC,yCAI9BxB,KAAKL,YAAc,GACnBK,KAAKH,iBAAmB,GACxBG,KAAKF,aAAe,2CAGRqC,GACZnC,KAAKP,UAAY0C,4CAGHV,QACmBW,IAA7BpC,KAAKL,YAAY8B,GACjBzB,KAAKL,YAAY8B,IAAU,GACS,IAA7BzB,KAAKL,YAAY8B,GACxBzB,KAAKL,YAAY8B,IAAU,EAE3BzB,KAAKL,YAAY8B,IAAU,sCAIvBP,GACRlB,KAAKZ,WAAL,GAAAa,OAAAC,OAAAC,EAAA,EAAAD,CAAsBF,KAAKZ,YAA3B,CAAuC8B,6CAI1BnB,GAEbC,KAAKZ,WAAa4C,KAAKC,MAAMD,KAAKE,UAAUnC,yCAGnCmB,GACTlB,KAAKT,eAAiB2B,4CAGRA,GACdlB,KAAKR,YAAc0B,wCAInBlB,KAAKb,cAAgB,qCAGfkD,GACNrC,KAAKX,MAAL,GAAAY,OAAAC,OAAAC,EAAA,EAAAD,CAAiBF,KAAKX,OAAtB,CAA6BgD,wCAIrBA,GACRrC,KAAKX,MAAQgD,yCAGFA,GACXrC,KAAKV,UAAY+C,sCAKjBrC,KAAKZ,WAAa,GAClBY,KAAKX,MAAQ,YAKrBiD,YAASpD,EAAS,CACdqD,gBAAiBC,IACjBC,eAAgBD,IAChBE,SAAUF,IACVG,YAAaH,IACbI,gBAAiBJ,IACjBK,kBAAmBL,IACnBM,YAAaN,IACbO,iBAAkBP,IAClBQ,aAAcR,IACdS,kBAAmBT,IACnBU,YAAaV,IACbW,UAAWX,IACXY,YAAaZ,IACba,eAAgBb,IAChBc,UAAWd,IACXe,mBAAoBf,IACpBrD,aAAcqE,IACdpE,WAAYoE,IACZnE,MAAOmE,IACPlE,SAAUkE,IACVjE,eAAgBiE,IAChBhE,YAAagE,IACb/D,UAAW+D,IACX9D,YAAa8D,IACb7D,YAAa6D,IACb5D,UAAW4D,IACX3D,iBAAkB2D,IAClB1D,aAAc0D,MAElB,IAEeC,EAFC,IAAIvE,mDC9FLwE,qBAlEFC,YAAO,UAAPA,CAAkBC,YAAQ,SAAAC,GAAA,SAAA3E,IAAA,IAAA4E,EAAA1D,EAAAF,OAAA6D,EAAA,EAAA7D,CAAAF,KAAAd,GAAA,QAAA8E,EAAAC,UAAArC,OAAAsC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAhE,EAAAF,OAAAmE,EAAA,EAAAnE,CAAAF,MAAA8D,EAAA5D,OAAAoE,EAAA,EAAApE,CAAAhB,IAAAqF,KAAAC,MAAAV,EAAA,CAAA9D,MAAAC,OAAAiE,MAG/BO,YAAc,WAGV,IAFA,IAAIC,EAAO,GAEFnE,EAAI,EAAGA,EAAI,EAAGA,IACnBmE,EAAKvD,KACDwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAejD,IAAKzB,EAAKL,MAAMgF,KAAK,GAAGxE,GAAGmE,KAAKzD,KACzDb,EAAKL,MAAMgF,KAAK,GAAGxE,GAAGmE,KAAK3C,KADhC,MACyC3B,EAAKL,MAAMgF,KAAK,GAAGxE,GAAGyE,YAKvE,IAAK,IAAIrD,EAAI,EAAGA,EAAIvB,EAAKL,MAAMgF,KAAK,GAAGnD,OAAQD,IAC3C+C,EAAKvD,KACDwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYjD,IAAKzB,EAAKL,MAAMgF,KAAK,GAAGpD,GAAGG,KAAKb,KACtDb,EAAKL,MAAMgF,KAAK,GAAGpD,GAAGG,KAAKC,OAIxC,IAAMM,EACFsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,YAAOzE,EAAKL,MAAMgF,KAAK,IACvBJ,EAAAC,EAAAC,cAAA,OAAKI,IAAK7E,EAAKL,MAAMgF,KAAK,GAAIG,IAAK9E,EAAKL,MAAMgF,KAAK,MAEvDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVJ,IAGTC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQM,QAAS/E,EAAKgF,WAAYN,UAAU,cAA5C,UAGZ1E,EAAKL,MAAM0D,QAAQR,kBAAkBZ,GACrCjC,EAAKL,MAAM0D,QAAQT,cAAa,IArCL5C,EAwC/BgF,WAAa,WACThF,EAAKL,MAAM0D,QAAQT,cAAa,IAzCL5C,EA2C/BiF,WAAa,WACTjF,EAAKiC,KACDsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUK,QAAS/E,EAAKqE,YAAa5C,IAAKzB,EAAKL,MAAMgF,KAAK,IACrEJ,EAAAC,EAAAC,cAAA,OAAKI,IAAK7E,EAAKL,MAAMgF,KAAK,GAAIG,IAAI,YAClCP,EAAAC,EAAAC,cAAA,YAAOzE,EAAKL,MAAMgF,KAAK,KAE/BO,aAAaC,QAAQvD,KAAKE,UAAU9B,EAAKL,MAAMgF,KAAK,IAAK/C,KAAKE,UAAU9B,EAAKL,MAAMgF,QAjDxD3E,EAAA,OAAAF,OAAAsF,EAAA,EAAAtF,CAAAhB,EAAA2E,GAAA3D,OAAAuF,EAAA,EAAAvF,CAAAhB,EAAA,EAAA2C,IAAA,qBAAA6D,MAAA,WAqD3B1F,KAAKqF,eArDsB,CAAAxD,IAAA,SAAA6D,MAAA,WAyD3B,OACIf,EAAAC,EAAAC,cAAA,WACK7E,KAAKqC,UA3DanD,EAAA,CACbyG,IAAMC,oBCChCC,OAAOC,eAAiB,WACpBR,aAAaC,QAAQ,YAAa,UAGtC,IAAIQ,EAAc,qCAiDHC,EA/CErC,YAAO,UAAPA,CAAkBC,YAAQ,SAAAC,GAAA,SAAAoC,IAAA,IAAAnC,EAAA1D,EAAAF,OAAA6D,EAAA,EAAA7D,CAAAF,KAAAiG,GAAA,QAAAjC,EAAAC,UAAArC,OAAAsC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAhE,EAAAF,OAAAmE,EAAA,EAAAnE,CAAAF,MAAA8D,EAAA5D,OAAAoE,EAAA,EAAApE,CAAA+F,IAAA1B,KAAAC,MAAAV,EAAA,CAAA9D,MAAAC,OAAAiE,MAWnCmB,WAAa,SAACtF,GACV,IAAImG,EAAW,GACfA,EAAS/E,KAAKwD,EAAAC,EAAAC,cAACsB,EAAD,CAASpB,KAAMhF,EAAO8B,IAAK9B,EAAM,GAAIqG,MAAOhG,EAAKL,MAAMsG,WACrEjG,EAAKL,MAAM0D,QAAQN,UAAU+C,GAC7BZ,aAAaC,QAAQvD,KAAKE,UAAUnC,EAAM,IAAKiC,KAAKE,UAAUnC,KAf/BK,EAkBnCkG,WAAa,SAAC1B,EAAG2B,GACbjF,QAAQC,IAAI,cAAeqD,EAAG2B,GAC9B,IAAK,IAAIhG,EAAIqE,EAAGrE,GAAKgG,EAAGhG,IAAK,CACzB,IAAMC,EAAO,GAAAP,OAAM8F,GAAN9F,OAAoBM,EAApB,KACbE,MAAMD,EAAS,CACXE,MAAO,gBAENC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IAAMC,EAAiBD,EAAKE,QAAQC,IAChCoB,EAAO,GAIX,OAHAA,EAAKlB,KAAKL,EAAK0F,QAAL,cAA+B1F,EAAKiB,KAAMjB,EAAK2F,MAAO3F,EAAKM,MAAON,EAAK4F,QACjFtG,EAAKL,MAAM0D,QAAQX,YAAYT,GAC/BjC,EAAKiF,WAAWhD,GACT5B,MAAMM,OAhCMX,EAAA,OAAAF,OAAAsF,EAAA,EAAAtF,CAAA+F,EAAApC,GAAA3D,OAAAuF,EAAA,EAAAvF,CAAA+F,EAAA,EAAApE,IAAA,qBAAA6D,MAAA,WAI/B,IAAIiB,GAAQ3G,KAAKD,MAAM6G,MAAMC,OAAOC,WACpCxF,QAAQC,IAAI,OAAQoF,GACpB3G,KAAKD,MAAM0D,QAAQH,YACnBtD,KAAKsG,WAAYtG,KAAKD,MAAM0D,QAAQnE,SAAWqH,EAAQ3G,KAAKD,MAAM0D,QAAQnE,SAAW,EAAGqH,EAAO3G,KAAKD,MAAM0D,QAAQnE,YAPnF,CAAAuC,IAAA,SAAA6D,MAAA,WAqC/B,OACIf,EAAAC,EAAAC,cAAA,WACK7E,KAAKD,MAAM0D,QAAQlE,eAAiBS,KAAKD,MAAM0D,QAAQjE,YAAcmF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAa9E,KAAKD,MAAM0D,QAAQpE,YAvC9F4G,EAAA,CACjBN,IAAMC,aCH5BG,EAAc,qCAElBF,OAAOkB,OAAS,WACZlB,OAAOmB,SAASC,KAAO,YAG3B,IAyRevD,EAzRFC,YAAO,UAAPA,CAAkBC,YAAQ,SAAAC,GAAA,SAAAoC,IAAA,IAAAnC,EAAA1D,EAAAF,OAAA6D,EAAA,EAAA7D,CAAAF,KAAAiG,GAAA,QAAAjC,EAAAC,UAAArC,OAAAsC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAhE,EAAAF,OAAAmE,EAAA,EAAAnE,CAAAF,MAAA8D,EAAA5D,OAAAoE,EAAA,EAAApE,CAAA+F,IAAA1B,KAAAC,MAAAV,EAAA,CAAA9D,MAAAC,OAAAiE,MAe/BgD,WAAa,WACT,IAAIC,EAAY/G,EAAKL,MAAM0D,QAAQrE,WAG/BgI,EAAUpF,KAAKC,MAAMD,KAAKE,UAAUiF,IACxCC,EAAQC,KAAK,SAAUzC,EAAG2B,GACtB,IAAIe,EAAQ1C,EAAE,GAAG2C,cAAeC,EAAQjB,EAAE,GAAGgB,cAC7C,OAAID,EAAQE,GACA,EACRF,EAAQE,EACD,EACJ,IAEX,IAAItB,EAAW,GACfkB,EAAQK,IAAI,SAACC,GAET,OADAxB,EAAS/E,KAAKwD,EAAAC,EAAAC,cAACsB,EAAD,CAASpB,KAAM2C,EAAM7F,IAAK6F,EAAK,GAAItB,MAAOhG,EAAKL,MAAMsG,WAC5D,IAEXjG,EAAKL,MAAM0D,QAAQL,YAAY8C,IAjCJ9F,EAqC/BuH,qBAAuB,SAACjG,IACpBtB,EAAKL,MAAMsG,QAAQlF,KAAnB,WACAf,EAAKL,MAAM0D,QAAQJ,eAAe3B,EAAEkG,OAAOlC,OAC3CtF,EAAKL,MAAM0D,QAAQH,YAEgC,IAA/ClD,EAAKL,MAAM0D,QAAQ5D,iBAAiB+B,SACpCxB,EAAKL,MAAM0D,QAAQb,gBAAgB,IAAMlB,EAAEkG,OAAOlC,OAClDtF,EAAKkG,WAAW,EAAG5E,EAAEkG,OAAOlC,SAG5BtF,EAAKL,MAAM0D,QAAQb,gBAAgBxC,EAAKL,MAAM0D,QAAQ5D,iBAAiB+B,OAASF,EAAEkG,OAAOlC,OACzFpE,QAAQC,IAAI,mBACDnB,EAAKL,MAAM0D,QAAQ5D,iBAAiB4B,OAAO,SAACoG,EAASC,GAC5D,OAAIA,EAAQ,GAAK,GAAKA,EAAQ,GAAKpG,EAAEkG,OAAOlC,QAM3CqC,QAAQ,SAACrG,GACV,IAAMlB,EAAO,GAAAP,OAAM8F,GAAN9F,OAAoByB,EAAE,GAAtB,KACbjB,MAAMD,EAAS,CACXE,MAAO,gBAENC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE1BF,KAAK,SAAAG,GACF,IAAMC,EAAiBD,EAAKE,QAAQC,IAChCoB,EAAO,GAGX,OAFAA,EAAKlB,KAAKL,EAAK0F,QAAL,cAA+B1F,EAAKiB,KAAMjB,EAAK2F,MAAO3F,EAAKM,MAAON,EAAK4F,QACjFtG,EAAKiF,WAAWhD,GACT5B,MAAMM,SApEFX,EA0E/BkG,WAAa,SAAC1B,EAAG2B,GACbjF,QAAQC,IAAI,cAAeqD,EAAG2B,GAC9B,IAAK,IAAIhG,EAAIqE,EAAGrE,GAAKgG,EAAGhG,IAAK,CACzB,IAAMC,EAAO,GAAAP,OAAM8F,GAAN9F,OAAoBM,EAApB,KACbE,MAAMD,EAAS,CACXE,MAAO,gBAENC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE1BF,KAAK,SAAAG,GACF,IAAMC,EAAiBD,EAAKE,QAAQC,IAChCoB,EAAO,GAGX,OAFAA,EAAKlB,KAAKL,EAAK0F,QAAL,cAA+B1F,EAAKiB,KAAMjB,EAAK2F,MAAO3F,EAAKM,MAAON,EAAK4F,QACjFtG,EAAKiF,WAAWhD,GACT5B,MAAMM,OAxFEX,EA6F/BiF,WAAa,SAACtF,GACV,IAAImG,EAAW,GACf9F,EAAKL,MAAM0D,QAAQX,YAAY/C,GAC/BmG,EAAS/E,KAAKwD,EAAAC,EAAAC,cAACsB,EAAD,CAASpB,KAAMhF,EAAO8B,IAAK9B,EAAM,GAAIqG,MAAOhG,EAAKL,MAAMsG,WACrEjG,EAAKL,MAAM0D,QAAQN,UAAU+C,GAC7BZ,aAAaC,QAAQvD,KAAKE,UAAUnC,EAAM,IAAKiC,KAAKE,UAAUnC,KAlGnCK,EAqG/B4H,gBAAkB,SAAAlH,GACdQ,QAAQC,IAAIT,GACZ,IAAImH,EAAWnH,EAAKmH,SAAW,GAC/B7H,EAAKL,MAAMsG,QAAQlF,KAAnB,SAAAlB,OAAiCgI,IACjC7H,EAAKL,MAAM0D,QAAQH,YACgC,IAA/ClD,EAAKL,MAAM0D,QAAQ5D,iBAAiB+B,QACpCxB,EAAKkG,WAAYlG,EAAKL,MAAM0D,QAAQnE,SAAW2I,EAAY7H,EAAKL,MAAM0D,QAAQnE,SAAW,EAAG2I,EAAW7H,EAAKL,MAAM0D,QAAQnE,WAE1HgC,QAAQC,IAAI,mBACDnB,EAAKL,MAAM0D,QAAQ5D,iBAAiB4B,OAAO,SAACC,EAAGoG,GACtD,OAAIA,EAAQ,GAAM1H,EAAKL,MAAM0D,QAAQnE,SAAW2I,EAAY7H,EAAKL,MAAM0D,QAAQnE,SAAW,GACnFwI,EAAQ,GAAKG,EAAW7H,EAAKL,MAAM0D,QAAQnE,WAMjDyI,QAAQ,SAACrG,GACV,IAAMlB,EAAO,GAAAP,OAAM8F,GAAN9F,OAAoByB,EAAE,GAAtB,KACbjB,MAAMD,EAAS,CACXE,MAAO,gBAENC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE1BF,KAAK,SAAAG,GACF,IAAMC,EAAiBD,EAAKE,QAAQC,IAChCoB,EAAO,GAGX,OAFAA,EAAKlB,KAAKL,EAAK0F,QAAL,cAA+B1F,EAAKiB,KAAMjB,EAAK2F,MAAO3F,EAAKM,MAAON,EAAK4F,QACjFtG,EAAKiF,WAAWhD,GACT5B,MAAMM,SAlIFX,EA0I/B8H,MAAQ,WACJC,SAASC,eAAe,SAAStD,UAAY,iBA3IlB1E,EA+I/BiI,UAAY,WACJF,SAASC,eAAe,SAASE,UAAUC,SAAS,mBACpDJ,SAASC,eAAe,SAAStD,UAAY,UAjJtB1E,EAsJ/BoI,aAAe,SAACzI,GACZK,EAAKL,MAAM0D,QAAQZ,kBAAkB9C,GACrCuB,QAAQC,IAAInB,EAAKL,MAAM0D,QAAQ9D,cAxJJS,EA2J/BqI,UAAY,WACRrI,EAAKL,MAAM0D,QAAQf,WACnB,IAAIgG,GAAO,EACX,IAAK,IAAI7G,KAAOzB,EAAKL,MAAM0D,QAAQ9D,YAC3BS,EAAKL,MAAM0D,QAAQ9D,YAAYkC,KAC/B6G,GAAO,GAGf,IAAa,IAATA,EACAtI,EAAKuC,mBAEJ,GAAmD,IAA/CvC,EAAKL,MAAM0D,QAAQ5D,iBAAiB+B,OAAc,CAEvDxB,EAAKL,MAAM0D,QAAQH,YACnBlD,EAAKL,MAAM0D,QAAQb,gBAAgBxC,EAAKL,MAAM0D,QAAQ5D,iBAAiB+B,OAASxB,EAAKL,MAAM0D,QAAQnE,UACnG,IAAK,IAAIiB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMC,EAAO,GAAAP,OAAM8F,GAAN9F,OAAoBG,EAAKL,MAAM0D,QAAQ5D,iBAAiBU,GAAG,GAA3D,KACbE,MAAMD,EAAS,CACXE,MAAO,gBAENC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE1BF,KAAK,SAAAG,GACF,IAAMC,EAAiBD,EAAKE,QAAQC,IAChCoB,EAAO,GAGX,OAFAA,EAAKlB,KAAKL,EAAK0F,QAAL,cAA+B1F,EAAKiB,KAAMjB,EAAK2F,MAAO3F,EAAKM,MAAON,EAAK4F,QACjFtG,EAAKiF,WAAWhD,GACT5B,MAAMM,KAGzBX,EAAKL,MAAMsG,QAAQlF,KAAnB,WAGAgH,SAASC,eAAe,SAASE,UAAUC,SAAS,mBACpDJ,SAASC,eAAe,SAAStD,UAAY,UA7LtB1E,EAgM/BuI,gBAAkB,WACdrH,QAAQC,IAAI,cAAenB,EAAKL,MAAM0D,QAAQ3D,cACnCM,EAAKL,MAAM0D,QAAQ3D,aAAa2B,OAAO,SAACC,EAAGoG,GAElD,OADAxG,QAAQC,IAAI,cAAenB,EAAKL,MAAM0D,QAAQ3D,cAC1CgI,EAAQ,GAAK,GAAKA,EAAQ,GAAK,KAMlCC,QAAQ,SAACrG,GACVJ,QAAQC,IAAI,YAAaG,GACzBtB,EAAKiF,WAAW3D,MA5MOtB,EA+M/BuC,YAAc,WACVvC,EAAKL,MAAMsG,QAAQlF,KAAnB,WACAf,EAAKL,MAAM0D,QAAQH,YACnBlD,EAAKL,MAAM0D,QAAQb,gBAAgB,IAAMxC,EAAKL,MAAM0D,QAAQnE,UAC5Dc,EAAKkG,WAAW,EAAGlG,EAAKL,MAAM0D,QAAQnE,UACtCc,EAAKL,MAAM0D,QAAQd,eApNQvC,EAAA,OAAAF,OAAAsF,EAAA,EAAAtF,CAAA+F,EAAApC,GAAA3D,OAAAuF,EAAA,EAAAvF,CAAA+F,EAAA,EAAApE,IAAA,oBAAA6D,MAAA,WAI3B1F,KAAKD,MAAMsG,QAAQlF,KAAnB,WACA,IAAIyH,EAAU5G,KAAKC,MAAMqD,aAAauD,QAAQ,cAE9B,OAAZD,GACAtH,QAAQC,IAAI,WAAYqH,GACxB5I,KAAKD,MAAM0D,QAAQhB,eAAemG,IAElC5I,KAAKD,MAAM0D,QAAQlB,oBAXI,CAAAV,IAAA,SAAA6D,MAAA,WAuNtB,IAAArE,EAAArB,KAEL,OADAsB,QAAQC,IAAIvB,KAAKD,MAAM0D,SACqB,MAAxCzD,KAAKD,MAAM0D,QAAQ7D,UAAUgC,QAC7B0D,aAAaC,QAAQ,YAAavD,KAAKE,UAAUlC,KAAKD,MAAM0D,QAAQ7D,YAEhE+E,EAAAC,EAAAC,cAAA,OAAKvE,GAAG,YACJqE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaK,QAASnF,KAAKkH,YAA7C,QACAvC,EAAAC,EAAAC,cAAA,UAAQ9C,KAAK,WAAW+C,UAAU,aAAaxE,GAAG,WAAWwI,KAAK,IAAIC,SAAU/I,KAAK2H,sBACjFhD,EAAAC,EAAAC,cAAA,UAAQa,MAAM,MAAd,MACAf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,MAAd,MACAf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,MAAd,OAEJf,EAAAC,EAAAC,cAAA,UAAQM,QAASnF,KAAKkI,MAAO5H,GAAG,SAASwE,UAAU,cAAnD,UACAH,EAAAC,EAAAC,cAAA,UAAQM,QAASnF,KAAK2C,YAAarC,GAAG,SAASwE,UAAU,cAAzD,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQxE,GAAG,SACtBqE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWH,EAAAC,EAAAC,cAAA,QAAMM,QAASnF,KAAKqI,WAApB,MAC1B1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACT9E,KAAKD,MAAM0D,QAAQ/D,YAAY+H,IAAI,SAAA5F,GAChC,OAAO8C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAejD,IAAKA,GACrC8C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcjD,GAC9B8C,EAAAC,EAAAC,cAAA,QAAMC,WAAoD,IAAxCzD,EAAKtB,MAAM0D,QAAQ9D,YAAYkC,GAAiB,sBAAwB,eAAgBsD,QAAS,kBAAM9D,EAAKmH,aAAa3G,KAA3I,iBAMhB8C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQM,QAASnF,KAAKyI,WAAtB,oBAOhB9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,UAAWC,KAE/CxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACIyE,cAAe,KACfC,UAAW,KACXC,WAAY,MACZC,eAAgB,WAChB/J,UAAWO,KAAKD,MAAM0D,QAAQhE,UAC9BgK,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAc3J,KAAKgI,gBACnB4B,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,cAM9BnF,EAAAC,EAAAC,cAAA,0BApRoBoB,EAAA,CACbN,IAAMC,aCZ1BmE,SAAWpG,YAAO,UAAPA,CAAkBC,YAAQ,SAAAC,GAAA,SAAAmG,IAAA,IAAAlG,EAAA1D,EAAAF,OAAA6D,EAAA,EAAA7D,CAAAF,KAAAgK,GAAA,QAAAhG,EAAAC,UAAArC,OAAAsC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAhE,EAAAF,OAAAmE,EAAA,EAAAnE,CAAAF,MAAA8D,EAAA5D,OAAAoE,EAAA,EAAApE,CAAA8J,IAAAzF,KAAAC,MAAAV,EAAA,CAAA9D,MAAAC,OAAAiE,MAEnC+F,aAAe,WACX7J,EAAKL,MAAMsG,QAAQ6D,UAHY9J,EAAA,OAAAF,OAAAsF,EAAA,EAAAtF,CAAA8J,EAAAnG,GAAA3D,OAAAuF,EAAA,EAAAvF,CAAA8J,EAAA,EAAAnI,IAAA,SAAA6D,MAAA,WAM/B,IAAI3D,EAAOC,KAAKE,UAAUlC,KAAKD,MAAM6G,MAAMC,OAAOsD,aAC9C1G,EAAUzB,KAAKC,MAAMqD,aAAauD,QAAQ9G,IAC1C2C,EAAO,GACX,GAAIjB,EAAS,CACT,IAAK,IAAIlD,EAAI,EAAGA,EAAI,EAAGA,IACnBmE,EAAKvD,KACDwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAejD,IAAK4B,EAAQ,GAAGlD,GAAGmE,KAAKzD,KACjDwC,EAAQ,GAAGlD,GAAGmE,KAAK3C,KADxB,MACiC0B,EAAQ,GAAGlD,GAAGyE,YAIvD,IAAK,IAAIrD,EAAI,EAAGA,EAAI8B,EAAQ,GAAG7B,OAAQD,IACnC+C,EAAKvD,KACDwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYjD,IAAK4B,EAAQ,GAAG9B,GAAGG,KAAKb,KAC9CwC,EAAQ,GAAG9B,GAAGG,KAAKC,YAMhCiI,EAAY7I,KAAKwD,EAAAC,EAAAC,cAAA,0BAGrB,OADA7E,KAAKD,MAAM0D,QAAQ2G,mBAAmB1F,GAElCC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,YAAOpB,EAAQ,IACfkB,EAAAC,EAAAC,cAAA,OAAKI,IAAKxB,EAAQ,GAAIyB,IAAKzB,EAAQ,MAEvCkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVJ,IAGTC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWK,QAASnF,KAAKiK,cAAxC,gBAxCuBD,EAAA,CACbrE,IAAMC,cAgDrByE,cAAWN,WC5CpBO,SAAS,CAAE7G,YAEjB8G,IAASC,OAED7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAeH,EACV3F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACE/F,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,IAAKC,UAAWyB,IAC5BhG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,gBAAgB2B,OAAK,EAAC1B,UAAW2B,MAIxD1C,SAASC,eAAe","file":"static/js/main.debb8f3f.chunk.js","sourcesContent":["/* eslint-disable no-loop-func */\r\n\r\nimport { observable, computed, action, decorate } from 'mobx';\r\n\r\nclass Pokemon {\r\n\r\n    countPokemon = 40;\r\n    poketArray = [];\r\n    array = [];\r\n    sizeView = 10;\r\n    clickOnPokemon = false;\r\n    tempPokemon = [];\r\n    pageCount = 80;\r\n    typePokemon = ['bug', 'dark', 'dragon', 'electric', 'fairy', 'fighting',\r\n        'fire', 'flying', 'ghost', 'grass', 'ground', 'ice', 'normal', 'poison',\r\n        'psychic', 'rock', 'steel', 'water'];\r\n    filterArray = {};\r\n    fullArray = [];\r\n    filterPoketArray = [];\r\n    renderFilter = [];\r\n\r\n    changeRenderFilter(props) {\r\n        this.renderFilter = [...this.renderFilter, props];\r\n        // this.renderFilter.push(props);\r\n    }\r\n\r\n    loadFullPokemon() {\r\n        let requestRoot = \"https://pokeapi.co/api/v2/pokemon/\";\r\n        for (var i = 1; i <= 800; i++) {\r\n            const id = i;\r\n            const request = `${requestRoot}${i}/`;\r\n            fetch(request, {\r\n                cache: \"force-cache\"\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const speciesRequest = data.species.url;\r\n                    let poket = [];\r\n                    poket.push(data.types, id);\r\n                    // this.fullArray.push(poket);\r\n                    this.fullArray = [this.fullArray, poket];\r\n                    return fetch(speciesRequest);\r\n                })\r\n        }\r\n    }\r\n\r\n    setFullPokemon(props) {\r\n        this.fullArray = props;\r\n    }\r\n\r\n    setFiter() {\r\n        console.log('фільтруєм', this.fullArray);\r\n        let newArray = this.fullArray.filter((e) => {\r\n            console.log(e);\r\n            for (var j = 0; j < e[0].length; j++) {\r\n                for (let key in this.filterArray) {\r\n                    if (this.filterArray[key]) {//key - значение текстовое,  this.filterArray[key] - значение ключа\r\n                        if (e[0][j].type.name === key) {\r\n                            // console.log(e[0][j].type.name, key);\r\n                            return true;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n        this.filterPoketArray = JSON.parse(JSON.stringify(newArray));\r\n        console.log('відфільтрували', newArray);\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filterArray = {};\r\n        this.filterPoketArray = [];\r\n        this.renderFilter = [];\r\n    }\r\n\r\n    changePageCount(countPage) {\r\n        this.pageCount = countPage;\r\n    }\r\n\r\n    changeFilterArray(filter) {\r\n        if (this.filterArray[filter] === undefined) {\r\n            this.filterArray[filter] = true;\r\n        } else if (this.filterArray[filter] === true) {\r\n            this.filterArray[filter] = false;\r\n        } else {\r\n            this.filterArray[filter] = true;\r\n        }\r\n    }\r\n\r\n    pushPokemon(poket) {\r\n        this.poketArray = [...this.poketArray, poket];\r\n        // this.poketArray.push(poket);\r\n    }\r\n\r\n    changePoketArray(props) {\r\n        // console.log('renderFilter', this.renderFilter.length);\r\n        this.poketArray = JSON.parse(JSON.stringify(props));\r\n    }\r\n\r\n    clickPokemon(poket) {\r\n        this.clickOnPokemon = poket;\r\n    }\r\n\r\n    changeTempPokemon(poket) {\r\n        this.tempPokemon = poket;\r\n    }\r\n\r\n    pokemonLoad() {\r\n        this.countPokemon += 10;\r\n    }\r\n\r\n    pushArray(temp) {\r\n        this.array = [...this.array, temp];\r\n        // this.array.push(temp);\r\n    }\r\n\r\n    changeArray(temp) {\r\n        this.array = temp;\r\n    }\r\n\r\n    changeSizeView(temp) {\r\n        this.sizeView = +temp;\r\n    }\r\n\r\n    changeAll() {\r\n        // this.countPokemon = countPokemon;\r\n        this.poketArray = [];\r\n        this.array = [];\r\n    }\r\n\r\n\r\n}\r\ndecorate(Pokemon, {\r\n    loadFullPokemon: action,\r\n    setFullPokemon: action,\r\n    setFiter: action,\r\n    clearFilter: action,\r\n    changePageCount: action,\r\n    changeFilterArray: action,\r\n    pushPokemon: action,\r\n    changePoketArray: action,\r\n    clickPokemon: action,\r\n    changeTempPokemon: action,\r\n    pokemonLoad: action,\r\n    pushArray: action,\r\n    changeArray: action,\r\n    changeSizeView: action,\r\n    changeAll: action,\r\n    changeRenderFilter: action,\r\n    countPokemon: observable,\r\n    poketArray: observable,\r\n    array: observable,\r\n    sizeView: observable,\r\n    clickOnPokemon: observable,\r\n    tempPokemon: observable,\r\n    pageCount: observable,\r\n    typePokemon: observable,\r\n    filterArray: observable,\r\n    fullArray: observable,\r\n    filterPoketArray: observable,\r\n    renderFilter: observable,\r\n});\r\nconst pokemon = new Pokemon();\r\n\r\nexport default pokemon;\r\nexport { Pokemon };","import React from 'react';\r\nimport '../style/pokemon.css';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nconst Poke = inject('pokemon')(observer(\r\n    class Pokemon extends React.Component {\r\n\r\n        handleClick = () => {\r\n            let stat = [];\r\n    \r\n            for (var i = 0; i < 6; i++) {\r\n                stat.push(\r\n                    <div className='pokemonStats' key={this.props.prop[2][i].stat.url}>\r\n                        {this.props.prop[2][i].stat.name} - {this.props.prop[2][i].base_stat}\r\n                    </div>\r\n                );\r\n            }\r\n    \r\n            for (var j = 0; j < this.props.prop[3].length; j++) {\r\n                stat.push(\r\n                    <div className='poketSlot' key={this.props.prop[3][j].type.url}>\r\n                        {this.props.prop[3][j].type.name}\r\n                    </div>\r\n                );\r\n            }\r\n            const temp =\r\n                <div className=\"poketInfo\">\r\n                    <div className='pokemonPages'>\r\n                        <div className='pokemonImg'>\r\n                            <span>{this.props.prop[1]}</span>\r\n                            <img src={this.props.prop[0]} alt={this.props.prop[1]}></img>\r\n                        </div>\r\n                        <div className='pokemonInformation'>\r\n                            {stat}\r\n                        </div>\r\n                    </div>\r\n                    <div className='gridBack'>\r\n                        <button onClick={this.handleBack} className='buttonBack'>back</button>\r\n                    </div>\r\n                </div>;\r\n            this.props.pokemon.changeTempPokemon(temp);//new array\r\n            this.props.pokemon.clickPokemon(true);\r\n    \r\n        }\r\n        handleBack = () => {\r\n            this.props.pokemon.clickPokemon(false);\r\n        }\r\n        handlePush = () => {\r\n            this.temp =\r\n                <div className=\"Pokemon\" onClick={this.handleClick} key={this.props.prop[1]}>\r\n                    <img src={this.props.prop[0]} alt='pokemon' />\r\n                    <span>{this.props.prop[1]}</span>\r\n                </div>;\r\n            localStorage.setItem(JSON.stringify(this.props.prop[1]), JSON.stringify(this.props.prop));\r\n        }\r\n    \r\n        componentWillMount() {\r\n            this.handlePush();\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <div>\r\n                    {this.temp}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default Poke;","import React from 'react';\r\nimport '../style/pokemon.css';\r\nimport Pokemon from './pokemon';\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { compose } from 'recompose';\r\n\r\nwindow.onbeforeunload = () => {\r\n    localStorage.setItem('firstLoad', 'false');\r\n}\r\n\r\nlet requestRoot = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\nconst PokeBeta = inject('pokemon')(observer(\r\n    class Pokedex extends React.Component {\r\n\r\n        componentWillMount() {\r\n            let page = +this.props.match.params.numberPage;\r\n            console.log('beta', page);\r\n            this.props.pokemon.changeAll();\r\n            this.getPokemon((this.props.pokemon.sizeView * page) - this.props.pokemon.sizeView + 1, page * this.props.pokemon.sizeView);\r\n\r\n        }\r\n\r\n        handlePush = (props) => {\r\n            let tempGrid = [];\r\n            tempGrid.push(<Pokemon prop={props} key={props[1]} click={this.props.history} />)\r\n            this.props.pokemon.pushArray(tempGrid);\r\n            localStorage.setItem(JSON.stringify(props[1]), JSON.stringify(props));\r\n        }\r\n\r\n        getPokemon = (a, b) => {\r\n            console.log('get pokemon', a, b);\r\n            for (var i = a; i <= b; i++) {\r\n                const request = `${requestRoot}${i}/`;\r\n                fetch(request, {\r\n                    cache: \"force-cache\"\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const speciesRequest = data.species.url;\r\n                        let temp = [];\r\n                        temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                        this.props.pokemon.pushPokemon(temp);\r\n                        this.handlePush(temp);\r\n                        return fetch(speciesRequest);\r\n                    })\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <div >\r\n                    {this.props.pokemon.clickOnPokemon ? this.props.pokemon.tempPokemon : <div className=\"FlexGrid\" >{this.props.pokemon.array}</div>}\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default PokeBeta","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport '../style/mainPage.css';\r\nimport '../style/pagination.css';\r\nimport Beta from './pokemonBeta.jsx';\r\nimport Pokemon from './pokemon';\r\n\r\nlet requestRoot = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\nwindow.onload = () => {\r\n    window.location.href = \"#/page/1\";\r\n}\r\n\r\nconst Poke = inject('pokemon')(observer(\r\n    class Pokedex extends React.Component {\r\n\r\n        componentDidMount() {\r\n            this.props.history.push(`/page/1`);\r\n            let tempArr = JSON.parse(localStorage.getItem('fullArray'));\r\n\r\n            if (tempArr !== null) {\r\n                console.log('temparrr', tempArr);\r\n                this.props.pokemon.setFullPokemon(tempArr);\r\n            } else {\r\n                this.props.pokemon.loadFullPokemon();\r\n            }\r\n        }\r\n\r\n        handleSort = () => {\r\n            let tempArray = this.props.pokemon.poketArray;\r\n            // console.log(tempArray);\r\n\r\n            let newTemp = JSON.parse(JSON.stringify(tempArray));\r\n            newTemp.sort(function (a, b) {\r\n                var nameA = a[1].toLowerCase(), nameB = b[1].toLowerCase()\r\n                if (nameA < nameB) //сортируем строки по возрастанию\r\n                    return -1\r\n                if (nameA > nameB)\r\n                    return 1\r\n                return 0 // Никакой сортировки\r\n            })\r\n            let tempGrid = [];\r\n            newTemp.map((item) => {\r\n                tempGrid.push(<Pokemon prop={item} key={item[1]} click={this.props.history} />);\r\n                return 0;\r\n            });\r\n            this.props.pokemon.changeArray(tempGrid);\r\n            // console.log(newTemp);\r\n        }\r\n\r\n        handleChangeSizeView = (e) => {\r\n            this.props.history.push(`/page/1`);\r\n            this.props.pokemon.changeSizeView(e.target.value);\r\n            this.props.pokemon.changeAll();\r\n\r\n            if (this.props.pokemon.filterPoketArray.length === 0) {\r\n                this.props.pokemon.changePageCount(800 / e.target.value);\r\n                this.getPokemon(1, e.target.value);\r\n            }\r\n            else {\r\n                this.props.pokemon.changePageCount(this.props.pokemon.filterPoketArray.length / e.target.value);\r\n                console.log('handlePageClick');\r\n                let temp = this.props.pokemon.filterPoketArray.filter((element, index) => {\r\n                    if (index + 1 >= 0 && index + 1 <= e.target.value) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n                temp.forEach((e) => {\r\n                    const request = `${requestRoot}${e[1]}/`;\r\n                    fetch(request, {\r\n                        cache: \"force-cache\"\r\n                    })\r\n                        .then(response => response.json())\r\n\r\n                        .then(data => {\r\n                            const speciesRequest = data.species.url;\r\n                            let temp = [];\r\n                            temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                            this.handlePush(temp);\r\n                            return fetch(speciesRequest);\r\n                        })\r\n                })\r\n            }\r\n        }\r\n\r\n        getPokemon = (a, b) => {\r\n            console.log('get pokemon', a, b);\r\n            for (var i = a; i <= b; i++) {\r\n                const request = `${requestRoot}${i}/`;\r\n                fetch(request, {\r\n                    cache: \"force-cache\"\r\n                })\r\n                    .then(response => response.json())\r\n\r\n                    .then(data => {\r\n                        const speciesRequest = data.species.url;\r\n                        let temp = [];\r\n                        temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                        this.handlePush(temp);\r\n                        return fetch(speciesRequest);\r\n                    })\r\n            }\r\n        }\r\n\r\n        handlePush = (props) => {\r\n            let tempGrid = [];\r\n            this.props.pokemon.pushPokemon(props);\r\n            tempGrid.push(<Pokemon prop={props} key={props[1]} click={this.props.history} />)\r\n            this.props.pokemon.pushArray(tempGrid);\r\n            localStorage.setItem(JSON.stringify(props[1]), JSON.stringify(props));\r\n        }\r\n\r\n        handlePageClick = data => {\r\n            console.log(data);\r\n            let selected = data.selected + 1;\r\n            this.props.history.push(`/page/${selected}`);\r\n            this.props.pokemon.changeAll();\r\n            if (this.props.pokemon.filterPoketArray.length === 0)\r\n                this.getPokemon((this.props.pokemon.sizeView * selected) - this.props.pokemon.sizeView + 1, selected * this.props.pokemon.sizeView);\r\n            else {\r\n                console.log('handlePageClick');\r\n                let temp = this.props.pokemon.filterPoketArray.filter((e, index) => {\r\n                    if (index + 1 >= (this.props.pokemon.sizeView * selected) - this.props.pokemon.sizeView + 1\r\n                        && index + 1 <= selected * this.props.pokemon.sizeView) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n                temp.forEach((e) => {\r\n                    const request = `${requestRoot}${e[1]}/`;\r\n                    fetch(request, {\r\n                        cache: \"force-cache\"\r\n                    })\r\n                        .then(response => response.json())\r\n\r\n                        .then(data => {\r\n                            const speciesRequest = data.species.url;\r\n                            let temp = [];\r\n                            temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                            this.handlePush(temp);\r\n                            return fetch(speciesRequest);\r\n                        })\r\n                    // this.handlePush(e);\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        popUp = () => {\r\n            document.getElementById('popup').className = 'popup--active';\r\n            // document.getElementById('hover').className = 'hover_body--active';\r\n            // document.getElementById('button').className = 'buttonMenu button--active';\r\n        }\r\n        popUpHide = () => {\r\n            if (document.getElementById('popup').classList.contains(\"popup--active\")) {\r\n                document.getElementById('popup').className = 'popup';\r\n                // document.getElementById('hover').className = 'hover_body';\r\n                // document.getElementById('button').className = 'buttonMenu';\r\n            }\r\n        }\r\n        changeFilter = (props) => {\r\n            this.props.pokemon.changeFilterArray(props);\r\n            console.log(this.props.pokemon.filterArray);\r\n        }\r\n\r\n        setFilter = () => {\r\n            this.props.pokemon.setFiter();\r\n            var flag = false;\r\n            for (let key in this.props.pokemon.filterArray) {\r\n                if (this.props.pokemon.filterArray[key]) {\r\n                    flag = true;\r\n                }\r\n            }\r\n            if (flag === false) {\r\n                this.clearFilter();\r\n            }\r\n            else if (this.props.pokemon.filterPoketArray.length !== 0) {\r\n\r\n                this.props.pokemon.changeAll();\r\n                this.props.pokemon.changePageCount(this.props.pokemon.filterPoketArray.length / this.props.pokemon.sizeView);\r\n                for (let i = 0; i < 10; i++) {\r\n                    const request = `${requestRoot}${this.props.pokemon.filterPoketArray[i][1]}/`;\r\n                    fetch(request, {\r\n                        cache: \"force-cache\"\r\n                    })\r\n                        .then(response => response.json())\r\n\r\n                        .then(data => {\r\n                            const speciesRequest = data.species.url;\r\n                            let temp = [];\r\n                            temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                            this.handlePush(temp);\r\n                            return fetch(speciesRequest);\r\n                        })\r\n                }\r\n                this.props.history.push(`/page/1`);\r\n                // this.handlePageClick({selected: 0});\r\n            }\r\n            if (document.getElementById('popup').classList.contains(\"popup--active\")) {\r\n                document.getElementById('popup').className = 'popup';\r\n            }\r\n        }\r\n        firstFilterLoad = () => {\r\n            console.log('arrayRender', this.props.pokemon.renderFilter);\r\n            let temp = this.props.pokemon.renderFilter.filter((e, index) => {\r\n                console.log('arrayRender', this.props.pokemon.renderFilter);\r\n                if (index + 1 >= 1 && index + 1 <= 10) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            temp.forEach((e) => {\r\n                console.log('setFilter', e);\r\n                this.handlePush(e);\r\n            })\r\n        }\r\n        clearFilter = () => {\r\n            this.props.history.push(`/page/1`);\r\n            this.props.pokemon.changeAll();\r\n            this.props.pokemon.changePageCount(800 / this.props.pokemon.sizeView);\r\n            this.getPokemon(1, this.props.pokemon.sizeView);\r\n            this.props.pokemon.clearFilter();\r\n        }\r\n\r\n        render() {\r\n            console.log(this.props.pokemon);\r\n            if (this.props.pokemon.fullArray.length === 800) {\r\n                localStorage.setItem('fullArray', JSON.stringify(this.props.pokemon.fullArray));\r\n                return (\r\n                    <div id='mainPage'>\r\n                        <div className=\"header\">\r\n                            <span>Poketdex</span>\r\n                        </div>\r\n                        <div>\r\n                            <button className='buttonMenu' onClick={this.handleSort}>sort</button>\r\n                            <select name=\"sizeView\" className='buttonMenu' id=\"sizeView\" size=\"1\" onChange={this.handleChangeSizeView}>\r\n                                <option value=\"10\" >10</option>\r\n                                <option value=\"20\" >20</option>\r\n                                <option value=\"50\" >50</option>\r\n                            </select>\r\n                            <button onClick={this.popUp} id='button' className='buttonMenu'>filter</button>\r\n                            <button onClick={this.clearFilter} id='button' className='buttonMenu'>clear Filter</button>\r\n                            <div className='popup' id='popup'>\r\n                                <div className='bodyPopup'>\r\n                                    <div className='headers' ><span onClick={this.popUpHide}>x</span></div>\r\n                                    <div className='bodyFilter'>\r\n                                        <ul className='filterContainer'>\r\n                                            {this.props.pokemon.typePokemon.map(key => {\r\n                                                return <li className='filterButton' key={key}>\r\n                                                    <span className='filterName'>{key}</span>\r\n                                                    <span className={(this.props.pokemon.filterArray[key] === true) ? 'selectFiter--Active' : 'selectFilter'} onClick={() => this.changeFilter(key)}> &#10010; </span>\r\n                                                </li>\r\n                                            })}\r\n                                        </ul>\r\n\r\n                                    </div>\r\n                                    <div className='setFilter'>\r\n                                        <button onClick={this.setFilter}> set filter </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div >\r\n                            <Route path=\"/page/:numberPage\" component={Beta} />\r\n                        </div>\r\n                        <div className='alignItem'>\r\n                            <ReactPaginate\r\n                                previousLabel={'<<'}\r\n                                nextLabel={'>>'}\r\n                                breakLabel={'...'}\r\n                                breakClassName={'break-me'}\r\n                                pageCount={this.props.pokemon.pageCount}\r\n                                marginPagesDisplayed={2}\r\n                                pageRangeDisplayed={2}\r\n                                onPageChange={this.handlePageClick}\r\n                                containerClassName={'pagination'}\r\n                                subContainerClassName={'pages pagination'}\r\n                                activeClassName={'active'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            return <div>Load...</div>\r\n        }\r\n    }\r\n))\r\n\r\nexport default Poke;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../style/pokemonInfo.css';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nconst PokeInfo = inject('pokemon')(observer(\r\n    class PokemonInfo extends React.Component {\r\n        handleGoHome = () => {\r\n            this.props.history.goBack();\r\n        }\r\n        render() {\r\n            let name = JSON.stringify(this.props.match.params.pokemonName);\r\n            let pokemon = JSON.parse(localStorage.getItem(name));\r\n            let stat = [];\r\n            if (pokemon) {\r\n                for (var i = 0; i < 6; i++) {\r\n                    stat.push(\r\n                        <div className='pokemonStats' key={pokemon[2][i].stat.url}>\r\n                            {pokemon[2][i].stat.name} - {pokemon[2][i].base_stat}\r\n                        </div>\r\n                    );\r\n                }\r\n                for (var j = 0; j < pokemon[3].length; j++) {\r\n                    stat.push(\r\n                        <div className='poketSlot' key={pokemon[3][j].type.url}>\r\n                            {pokemon[3][j].type.name}\r\n                        </div>\r\n                    );\r\n\r\n                }\r\n            } else {\r\n                PokemonInfo.push(<div>Failed 404</div>)\r\n            }\r\n            this.props.pokemon.changeTempPokemons(stat);\r\n            return (\r\n                <div >\r\n                    <div className='pokemonPages'>\r\n                        <div className='pokemonImg'>\r\n                            <span>{pokemon[1]}</span>\r\n                            <img src={pokemon[0]} alt={pokemon[1]}></img>\r\n                        </div>\r\n                        <div className='pokemonInformation'>\r\n                            {stat}\r\n                        </div>\r\n                    </div>\r\n                    <div className='loadMore' onClick={this.handleGoHome}>\r\n                        Go home\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n))\r\n\r\nexport default withRouter(PokeInfo)","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'mobx-react';\nimport pokemon from \"./Stores/pokemon\";\nimport Poket from './App/App';\nimport PoketInfo from './App/pokemonInfo';\nimport {HashRouter, Route } from \"react-router-dom\";\nimport './style/main.css';\n\nconst stores = { pokemon };\n\nReactDOM.render(\n   \n        <Provider  { ...stores }>\n              <HashRouter>\n                <Route path=\"/\"  component={Poket} />\n                <Route path=\"/:pokemonName\" exact component={PoketInfo} />\n             </HashRouter>\n        </Provider>,\n\n     document.getElementById('root')\n);"],"sourceRoot":""}